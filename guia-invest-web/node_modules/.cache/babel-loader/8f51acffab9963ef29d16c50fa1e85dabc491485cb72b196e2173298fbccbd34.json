{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thale\\\\Downloads\\\\dev-projects-AI\\\\GuiaInvest\\\\guia-invest-web\\\\src\\\\components\\\\ReturnCalculator.tsx\";\nimport React from 'react';\nimport { Box, Button, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst annualReturns = {\n  conservative: {\n    'Poupança': 6,\n    'Tesouro Direto': 10,\n    'Previdência Privada': 12,\n    'Fundos de Renda Fixa': 7,\n    'CDB, LCI, LCA': 12,\n    'Fundo Imobiliário, Ações': 27\n  },\n  moderate: {\n    'Tesouro Direto': 10,\n    'Previdência': 12,\n    'Fundos de Renda Fixa': 7,\n    'CDB, LCI, LCA': 12,\n    'Poupança': 6,\n    'Ações, COE, Fundos Imobiliários, Multimercado': 27\n  },\n  aggressive: {\n    'Tesouro Direto': 10,\n    'Previdência Privada': 12,\n    'Fundos de Renda Fixa': 7,\n    'Ações, COE, Fundos Imobiliários, Multimercado, etc.': 35\n  }\n};\nconst portfolioAllocations = {\n  conservative: [{\n    name: 'Poupança',\n    percentage: 5\n  }, {\n    name: 'Tesouro Direto',\n    percentage: 25\n  }, {\n    name: 'Previdência Privada',\n    percentage: 20\n  }, {\n    name: 'Fundos de Renda Fixa',\n    percentage: 25\n  }, {\n    name: 'CDB, LCI, LCA',\n    percentage: 20\n  }, {\n    name: 'Fundo Imobiliário, Ações',\n    percentage: 5\n  }],\n  moderate: [{\n    name: 'Tesouro Direto',\n    percentage: 20\n  }, {\n    name: 'Previdência',\n    percentage: 20\n  }, {\n    name: 'Fundos de Renda Fixa',\n    percentage: 20\n  }, {\n    name: 'CDB, LCI, LCA',\n    percentage: 15\n  }, {\n    name: 'Poupança',\n    percentage: 5\n  }, {\n    name: 'Ações, COE, Fundos Imobiliários, Multimercado',\n    percentage: 20\n  }],\n  aggressive: [{\n    name: 'Tesouro Direto',\n    percentage: 10\n  }, {\n    name: 'Previdência Privada',\n    percentage: 20\n  }, {\n    name: 'Fundos de Renda Fixa',\n    percentage: 10\n  }, {\n    name: 'Ações, COE, Fundos Imobiliários, Multimercado, etc.',\n    percentage: 60\n  }]\n};\nconst ReturnCalculator = ({\n  profile,\n  amount,\n  onNext,\n  onBack\n}) => {\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Please complete the investment profile questionnaire first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  const allocation = portfolioAllocations[profile];\n  const returns = annualReturns[profile];\n  const calculateTotalReturn = () => {\n    return allocation.reduce((total, item) => {\n      const returnRate = returns[item.name];\n      return total + amount * (item.percentage / 100) * (returnRate / 100);\n    }, 0);\n  };\n  const totalReturn = calculateTotalReturn();\n  const percentageReturn = totalReturn / amount * 100;\n\n  // Calculate projected values for the next 12 months\n  const monthlyData = Array.from({\n    length: 13\n  }, (_, i) => {\n    const monthlyReturn = totalReturn / 12;\n    return amount + monthlyReturn * i;\n  });\n  const chartData = {\n    labels: Array.from({\n      length: 13\n    }, (_, i) => `Mês ${i}`),\n    datasets: [{\n      label: 'Projeção de Investimento',\n      data: monthlyData,\n      borderColor: '#1976d2',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Simula\\xE7\\xE3o de Rendimentos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Tipo de Investimento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Aloca\\xE7\\xE3o (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Retorno Anual (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Valor (R$)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Retorno (R$)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [allocation.map(item => {\n              const returnRate = returns[item.name];\n              const allocatedAmount = amount * (item.percentage / 100);\n              const returnAmount = allocatedAmount * (returnRate / 100);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: item.percentage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: returnRate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: allocatedAmount.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: returnAmount.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)]\n              }, item.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 3,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: amount.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: totalReturn.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        children: [\"Retorno Anual Esperado: \", percentageReturn.toFixed(2), \"% ou R$ \", totalReturn.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 300,\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: {\n            maintainAspectRatio: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          display: 'block',\n          mt: 2\n        },\n        children: \"* Esses valores s\\xE3o baseados em dados hist\\xF3ricos e s\\xE3o apenas uma simula\\xE7\\xE3o. Os rendimentos futuros podem variar de acordo com o mercado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onBack,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: onNext,\n        children: \"Pr\\xF3ximo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_c = ReturnCalculator;\nexport default ReturnCalculator;\nvar _c;\n$RefreshReg$(_c, \"ReturnCalculator\");","map":{"version":3,"names":["React","Box","Button","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","annualReturns","conservative","moderate","aggressive","portfolioAllocations","name","percentage","ReturnCalculator","profile","amount","onNext","onBack","children","fileName","_jsxFileName","lineNumber","columnNumber","allocation","returns","calculateTotalReturn","reduce","total","item","returnRate","totalReturn","percentageReturn","monthlyData","Array","from","length","_","i","monthlyReturn","chartData","labels","datasets","label","data","borderColor","tension","sx","mt","variant","gutterBottom","elevation","p","mb","align","map","allocatedAmount","returnAmount","toFixed","colSpan","height","options","maintainAspectRatio","display","justifyContent","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thale/Downloads/dev-projects-AI/GuiaInvest/guia-invest-web/src/components/ReturnCalculator.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ChartData,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface ReturnCalculatorProps {\r\n  profile: 'conservative' | 'moderate' | 'aggressive' | null;\r\n  amount: number;\r\n  onNext: () => void;\r\n  onBack: () => void;\r\n}\r\n\r\nconst annualReturns = {\r\n  conservative: {\r\n    'Poupança': 6,\r\n    'Tesouro Direto': 10,\r\n    'Previdência Privada': 12,\r\n    'Fundos de Renda Fixa': 7,\r\n    'CDB, LCI, LCA': 12,\r\n    'Fundo Imobiliário, Ações': 27,\r\n  },\r\n  moderate: {\r\n    'Tesouro Direto': 10,\r\n    'Previdência': 12,\r\n    'Fundos de Renda Fixa': 7,\r\n    'CDB, LCI, LCA': 12,\r\n    'Poupança': 6,\r\n    'Ações, COE, Fundos Imobiliários, Multimercado': 27,\r\n  },\r\n  aggressive: {\r\n    'Tesouro Direto': 10,\r\n    'Previdência Privada': 12,\r\n    'Fundos de Renda Fixa': 7,\r\n    'Ações, COE, Fundos Imobiliários, Multimercado, etc.': 35,\r\n  },\r\n};\r\n\r\nconst portfolioAllocations = {\r\n  conservative: [\r\n    { name: 'Poupança', percentage: 5 },\r\n    { name: 'Tesouro Direto', percentage: 25 },\r\n    { name: 'Previdência Privada', percentage: 20 },\r\n    { name: 'Fundos de Renda Fixa', percentage: 25 },\r\n    { name: 'CDB, LCI, LCA', percentage: 20 },\r\n    { name: 'Fundo Imobiliário, Ações', percentage: 5 },\r\n  ],\r\n  moderate: [\r\n    { name: 'Tesouro Direto', percentage: 20 },\r\n    { name: 'Previdência', percentage: 20 },\r\n    { name: 'Fundos de Renda Fixa', percentage: 20 },\r\n    { name: 'CDB, LCI, LCA', percentage: 15 },\r\n    { name: 'Poupança', percentage: 5 },\r\n    { name: 'Ações, COE, Fundos Imobiliários, Multimercado', percentage: 20 },\r\n  ],\r\n  aggressive: [\r\n    { name: 'Tesouro Direto', percentage: 10 },\r\n    { name: 'Previdência Privada', percentage: 20 },\r\n    { name: 'Fundos de Renda Fixa', percentage: 10 },\r\n    { name: 'Ações, COE, Fundos Imobiliários, Multimercado, etc.', percentage: 60 },\r\n  ],\r\n};\r\n\r\nconst ReturnCalculator: React.FC<ReturnCalculatorProps> = ({\r\n  profile,\r\n  amount,\r\n  onNext,\r\n  onBack,\r\n}) => {\r\n  if (!profile) {\r\n    return <Typography>Please complete the investment profile questionnaire first.</Typography>;\r\n  }\r\n\r\n  const allocation = portfolioAllocations[profile];\r\n  const returns = annualReturns[profile];\r\n\r\n  const calculateTotalReturn = () => {\r\n    return allocation.reduce((total, item) => {\r\n      const returnRate = returns[item.name as keyof typeof returns];\r\n      return total + (amount * (item.percentage / 100) * (returnRate / 100));\r\n    }, 0);\r\n  };\r\n\r\n  const totalReturn = calculateTotalReturn();\r\n  const percentageReturn = (totalReturn / amount) * 100;\r\n\r\n  // Calculate projected values for the next 12 months\r\n  const monthlyData = Array.from({ length: 13 }, (_, i) => {\r\n    const monthlyReturn = totalReturn / 12;\r\n    return amount + (monthlyReturn * i);\r\n  });\r\n\r\n  const chartData: ChartData<'line'> = {\r\n    labels: Array.from({ length: 13 }, (_, i) => `Mês ${i}`),\r\n    datasets: [\r\n      {\r\n        label: 'Projeção de Investimento',\r\n        data: monthlyData,\r\n        borderColor: '#1976d2',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Simulação de Rendimentos\r\n      </Typography>\r\n\r\n      <Paper elevation={1} sx={{ p: 3, mb: 3 }}>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Tipo de Investimento</TableCell>\r\n                <TableCell align=\"right\">Alocação (%)</TableCell>\r\n                <TableCell align=\"right\">Retorno Anual (%)</TableCell>\r\n                <TableCell align=\"right\">Valor (R$)</TableCell>\r\n                <TableCell align=\"right\">Retorno (R$)</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allocation.map((item) => {\r\n                const returnRate = returns[item.name as keyof typeof returns];\r\n                const allocatedAmount = amount * (item.percentage / 100);\r\n                const returnAmount = allocatedAmount * (returnRate / 100);\r\n\r\n                return (\r\n                  <TableRow key={item.name}>\r\n                    <TableCell>{item.name}</TableCell>\r\n                    <TableCell align=\"right\">{item.percentage}</TableCell>\r\n                    <TableCell align=\"right\">{returnRate}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {allocatedAmount.toFixed(2)}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {returnAmount.toFixed(2)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              <TableRow>\r\n                <TableCell colSpan={3}><strong>Total</strong></TableCell>\r\n                <TableCell align=\"right\"><strong>{amount.toFixed(2)}</strong></TableCell>\r\n                <TableCell align=\"right\"><strong>{totalReturn.toFixed(2)}</strong></TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Typography variant=\"h6\" sx={{ mt: 3, mb: 2 }}>\r\n          Retorno Anual Esperado: {percentageReturn.toFixed(2)}% ou R$ {totalReturn.toFixed(2)}\r\n        </Typography>\r\n\r\n        <Box sx={{ height: 300, mt: 4 }}>\r\n          <Line data={chartData} options={{ maintainAspectRatio: false }} />\r\n        </Box>\r\n\r\n        <Typography variant=\"caption\" sx={{ display: 'block', mt: 2 }}>\r\n          * Esses valores são baseados em dados históricos e são apenas uma simulação. Os rendimentos futuros podem variar de acordo com o mercado.\r\n        </Typography>\r\n      </Paper>\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\r\n        <Button variant=\"outlined\" onClick={onBack}>\r\n          Voltar\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={onNext}>\r\n          Próximo\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReturnCalculator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}